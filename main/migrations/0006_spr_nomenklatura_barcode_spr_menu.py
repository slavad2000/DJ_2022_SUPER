# Generated by Django 4.0.3 on 2022-04-03 14:34

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0001_initial'),
        ('main', '0005_alter_spr_pictures_imagefile'),
    ]

    operations = [
        migrations.CreateModel(
            name='spr_nomenklatura_barcode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid_update', models.UUIDField(blank=True, default=uuid.uuid4)),
                ('deleted', models.BooleanField(default=False, verbose_name='Блокировка')),
                ('code', models.CharField(blank=True, default='', max_length=11, verbose_name='Код')),
                ('barcode', models.CharField(max_length=13, verbose_name='Штрих-код')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.spr_nomenklatura_units', verbose_name='Единица номенклатуры')),
                ('reg_global', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='users.reg_global', verbose_name='Global ID')),
            ],
            options={
                'verbose_name': 'Штрих-код',
                'verbose_name_plural': 'Справочник: "Штрих-коды единиц измерения"',
            },
        ),
        migrations.CreateModel(
            name='spr_menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid_update', models.UUIDField(blank=True, default=uuid.uuid4)),
                ('deleted', models.BooleanField(default=False, verbose_name='Блокировка')),
                ('code', models.CharField(blank=True, default='', max_length=11, verbose_name='Код')),
                ('group', models.BooleanField(default=False, verbose_name='Группа')),
                ('name', models.CharField(max_length=50, verbose_name='Наименование')),
                ('name_full', models.CharField(max_length=150, verbose_name='Полное наименование')),
                ('opisanie', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('ves', models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='Вес (гр.)')),
                ('time', models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='Время приготовления (мин)')),
                ('calories', models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='ККал')),
                ('belki', models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='Белки')),
                ('jiry', models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='Жири')),
                ('uglevody', models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='Углеводы')),
                ('imageFile', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Фото')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=11, verbose_name='Цена')),
                ('sort', models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='сортировка')),
                ('izbran', models.BooleanField(default=False, verbose_name='Избранный')),
                ('vesovoy', models.BooleanField(default=False, verbose_name='Весовой')),
                ('zaprosprice', models.BooleanField(default=False, verbose_name='Запрашивать цену')),
                ('podarok', models.BooleanField(default=False, verbose_name='Признак "Подарок"')),
                ('zapretruchnogovybora', models.BooleanField(default=False, verbose_name='Запрет ручного выбора')),
                ('kodPodbora', models.CharField(blank=True, default='', max_length=6, verbose_name='Наименование')),
                ('name_kuhny', models.CharField(blank=True, default='', max_length=50, verbose_name='Наименование для кухни')),
                ('separate', models.BooleanField(default=False, verbose_name='Отдельный')),
                ('categorie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='main.spr_categories', verbose_name='Категория')),
                ('grprint', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='main.spr_grprint', verbose_name='Группа печати')),
                ('nomenklatura', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='main.spr_nomenklatura', verbose_name='Номенклатура')),
                ('otdel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='main.spr_otdely', verbose_name='Отдел')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.spr_typemenu', verbose_name='Тип меню')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='main.spr_menu', verbose_name='Подгруппа')),
                ('reg_global', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='users.reg_global', verbose_name='Global ID')),
                ('stavkands', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='main.spr_stavkands', verbose_name='Ставка НДС')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='main.spr_nomenklatura_units', verbose_name='Единица номенклатуры')),
            ],
            options={
                'verbose_name': 'Состав меню',
                'verbose_name_plural': 'Справочник: "Состав меню"',
            },
        ),
    ]
